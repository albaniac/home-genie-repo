<?xml version="1.0" encoding="utf-16"?>
<ProgramBlock xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <ConditionType>OnTrue</ConditionType>
  <Conditions />
  <Commands />
  <ScriptCondition>// Put your trigger code logic here.
// To execute the Code To Run,
// use a 'return true' or 'return false' otherwise.
Program.Setup(()=&gt;{
    Program.AddInputField("AlarmAddOn.PhoneNumber1", "", "1. Num?ro de t?l?phone 1");
    Program.AddInputField("AlarmAddOn.PhoneNumber2", "", "2. Num?ro de t?l?phone 2");
    Program.AddInputField("AlarmAddOn.SynologyIP", "", "3. Adresse IP du serveur Synology");
  	Program.AddInputField("AlarmAddOn.SynologyPort", "", "4. Port du serveur Synology");
  	Program.AddInputField("AlarmAddOn.SynologyLogin", "", "5. Login du serveur Synology");
  	Program.AddInputField("AlarmAddOn.SynologyPassword", "", "6. Password du serveur Synology");
  	Program.AddInputField("AlarmAddOn.KarotzIP", "", "7. Adresse IP du karotz (sous openkarotz)");
  	Program.AddInputField("AlarmAddOn.ShutterName", "", "8. Nom du volet roulant ? d?placer");
  	Program.AddInputField("AlarmAddOn.ShutterLevelOn", "", "9. Pourcentage du volet roulant ? d?placer quand l'alarme est activ?");
});
return true;</ScriptCondition>
  <ScriptSource>var tel1 = Program.InputField("AlarmAddOn.PhoneNumber1").Value;
var tel2 = Program.InputField("AlarmAddOn.PhoneNumber2").Value;
var SynologyIP = Program.InputField("AlarmAddOn.SynologyIP").Value;
var SynologyPort = Program.InputField("AlarmAddOn.SynologyPort").Value;
var SynologyLogin = Program.InputField("AlarmAddOn.SynologyLogin").Value;
var SynologyPassword = Program.InputField("AlarmAddOn.SynologyPassword").Value;
var KarotzIP = Program.InputField("AlarmAddOn.KarotzIP").Value;
var ShutterName = Program.InputField("AlarmAddOn.ShutterName").Value;
var ShutterLevelOn = Program.InputField("AlarmAddOn.ShutterLevelOn").Value;

Action&lt;string,string&gt; 
sendsms = (string tel, string text) =&gt; {
	Program.RunAsyncTask(()=&gt;{
      var proc = new System.Diagnostics.Process {
          StartInfo = new System.Diagnostics.ProcessStartInfo {
              FileName = "/bin/bash",
              Arguments = "-c \"echo "+text+" | /usr/bin/gammu --sendsms TEXT "+tel+"\"",
              UseShellExecute = false,
              RedirectStandardOutput = true,
             CreateNoWindow = true
          }
      };
      proc.Start();
      while (!proc.StandardOutput.EndOfStream) {
          string line = proc.StandardOutput.ReadLine();
          Program.Notify("SHELL COMMAND", line);
      }
	});
};

var alarmTriggeredLogicC = new Func&lt;bool&gt;(()=&gt;{
    Program.RunAsyncTask(()=&gt;
	{
  	////////////////////// Send SMS //////////////////////
    if(tel1 != ""){sendsms(tel1,"// Alarm "+DateTime.Now+" // "+Program.WithName("Security Alarm System").Parameter("HomeGenie.SecurityTriggerSource").Value+" //");}
	if(tel2 != ""){sendsms(tel2,"// Alarm "+DateTime.Now+" // "+Program.WithName("Security Alarm System").Parameter("HomeGenie.SecurityTriggerSource").Value+" //");}
    //////////// Alerte sur le karotz
	if(KarotzIP != ""){Net.WebService("http://"+KarotzIP+"/cgi-bin/tts?voice=alice&amp;text=Une intrusion est d?tect?. Donc des mail et des sms sont envoy?s aux propri?taires. Et des sirenes vont se d?clencher&amp;nocache=0").Call();}
    });
  	return true;
});

var alarmonnnn = new Func&lt;bool&gt;(()=&gt;{
    Program.RunAsyncTask(()=&gt;
	{
    ////////////////////// on bouge le volet //////////////////////
    if(ShutterName!=""&amp;&amp;ShutterLevelOn!=""){Modules.WithName(""+ShutterName+"").Command("Control.Level").Set(""+ShutterLevelOn+"");}
    ////////////////////// Send SMS //////////////////////
    if(tel1 != ""){sendsms(tel1,"// Alarm On : "+DateTime.Now+" //");}
    if(tel2 != ""){sendsms(tel2,"// Alarm On : "+DateTime.Now+" //");}
    ////////////////////// Alerte sur openkarotz //////////////////////
    if(KarotzIP!=""){Net.WebService("http://"+KarotzIP+"/cgi-bin/tts?voice=alice&amp;text=Alarme activ?,Alarme activ?,Alarme activ?&amp;nocache=0").Call();}
    ////////////////////// Activation de la webcam dans le synology surveillance video  //////////////////////
    if(SynologyIP != "" &amp;&amp; SynologyPort != "" &amp;&amp; SynologyLogin != "" &amp;&amp; SynologyPassword != ""){
      try
      {
        var authensyno = Net.WebService("http://"+SynologyIP+":"+SynologyPort+"/webapi/auth.cgi?api=SYNO.API.Auth&amp;method=Login&amp;version=2&amp;account="+SynologyLogin+"&amp;passwd="+SynologyPassword+"&amp;session=SurveillanceStation&amp;format=cookie").GetData();
        Net.WebService("http://"+SynologyIP+":"+SynologyPort+"/webapi/SurveillanceStation/camera.cgi?api=SYNO.SurveillanceStation.Camera&amp;method=Enable&amp;version=3&amp;cameraIds=1&amp;_sid="+authensyno.data.sid).GetData();
      }
      catch (Exception e) 
      {
          Program.Notify("error", e.Message);
      }
   }
      });
  	return true;
});

var alarmoffff = new Func&lt;bool&gt;(()=&gt;{
    Program.RunAsyncTask(()=&gt;
	{
    ////////////////////// on bouge le volet //////////////////////
    if(ShutterName!=""&amp;&amp;ShutterLevelOn!=""){Modules.WithName(""+ShutterName+"").Command("Control.Level").Set("100");}
    ////////////////////// Send SMS //////////////////////
    if(tel1 != ""){sendsms(tel1,"// Alarm Off : "+DateTime.Now+" //");}
    if(tel2 != ""){sendsms(tel2,"// Alarm Off : "+DateTime.Now+" //");}
    ////////////////////// Alerte sur openkarotz //////////////////////
    if(KarotzIP != ""){Net.WebService("http://"+KarotzIP+"/cgi-bin/tts?voice=alice&amp;text=Alarme d?sactiv?,Alarme d?sactiv?,Alarme d?sactiv?&amp;nocache=0").Call();}
    ////////////////////// D?sactivation de la webcam dans le synology surveillance video  //////////////////////
    if(SynologyIP != "" &amp;&amp; SynologyPort != "" &amp;&amp; SynologyLogin != "" &amp;&amp; SynologyPassword != ""){
	  try
      {
        var authensyno = Net.WebService("http://"+SynologyIP+":"+SynologyPort+"/webapi/auth.cgi?api=SYNO.API.Auth&amp;method=Login&amp;version=2&amp;account="+SynologyLogin+"&amp;passwd="+SynologyPassword+"&amp;session=SurveillanceStation&amp;format=cookie").GetData();
        Net.WebService("http://"+SynologyIP+":"+SynologyPort+"/webapi/SurveillanceStation/camera.cgi?api=SYNO.SurveillanceStation.Camera&amp;method=Disable&amp;version=3&amp;cameraIds=1&amp;_sid="+authensyno.data.sid).GetData();
      }
      catch (Exception e) 
      {
          Program.Notify("error", e.Message);
      }
    }
    });
	return true;
});

When.ModuleParameterChanged( (module, parameter) =&gt;
{
    if (module.Is("Security Alarm System") &amp;&amp; parameter.Is("HomeGenie.SecurityTriggered") &amp;&amp; parameter.Value == "1")
    {
        alarmTriggeredLogicC();
        return false;
    }
    if (module.Is("Security Alarm System") &amp;&amp; parameter.Is("Status.Level") &amp;&amp; parameter.Value == "1")
    {
        alarmonnnn();
        return false;
    }
    if (module.Is("Security Alarm System") &amp;&amp; parameter.Is("Status.Level") &amp;&amp; parameter.Value == "0")
    {
        alarmoffff();
        return false;
    }
    return true;
});
Program.GoBackground();</ScriptSource>
  <ScriptErrors>[]</ScriptErrors>
  <IsRunning>true</IsRunning>
  <Features />
  <LastConditionEvaluationResult>true</LastConditionEvaluationResult>
  <Domain>HomeAutomation.HomeGenie.Automation</Domain>
  <Address>1026</Address>
  <Name>Alarme - Gestion compl?mentaire</Name>
  <Description>Permet de g?rer les ?v?nements suivant de mani?re ind?pendante : alarme activ?, alarme d?sactiv?, alarme enclench?. Et de faire des actions suppl?mentaires lors de ces ?v?nements, exemple : envoi de sms, alerte sur le karotz, d?placement du volet, ....</Description>
  <Group>test</Group>
  <ActivationTime>2014-12-07T10:05:39.340874Z</ActivationTime>
  <TriggerTime>2014-12-07T13:23:34.851673Z</TriggerTime>
  <Type>CSharp</Type>
  <IsEnabled>true</IsEnabled>
</ProgramBlock>