<?xml version="1.0" encoding="utf-16"?>
<ProgramBlock xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Domain>HomeAutomation.HomeGenie.Automation</Domain>
  <Address>17</Address>
  <Name>Blackout Begin</Name>
  <Description>Monitor a device that can report metering to find out 
and report when there is a black out. </Description>
  <Group>Monitor</Group>
  <Type>CSharp</Type>
  <ActivationTime>2013-12-07T01:49:40.590223Z</ActivationTime>
  <TriggerTime>2013-12-07T01:50:58.805141Z</TriggerTime>
  <ScriptCondition>Program.Setup( () =&gt; {

    Program.AddInputField("Monitor.BlackoutDevice", "", "Name of the module to monitor");
  
});

// a blackout can be detected when the metering value of a given device is 0
var monitoreddevice = Modules
  		.WithName( Program.InputField("Monitor.BlackoutDevice").Value )
  		.Get();

return (monitoreddevice.WasFound &amp;&amp; 
        monitoreddevice.Parameter("Meter.Watts").DecimalValue == 0);
</ScriptCondition>
  <ScriptSource>// this will show a popup in the UI 
Program.Notify("System Monitor", "Warning: power failure detected!"); // Events. also alias of 'When' helper class.
// this will play a voice (from hg host speaker) saying a power failure message
Program.Say("Warning: possible power failure or blackout detected!", "en");
</ScriptSource>
  <ScriptErrors />
  <ConditionType>OnSwitchTrue</ConditionType>
  <Conditions />
  <Commands />
  <IsRunning>false</IsRunning>
  <IsEvaluatingConditionBlock>true</IsEvaluatingConditionBlock>
  <Features />
  <LastConditionEvaluationResult>true</LastConditionEvaluationResult>
  <IsEnabled>false</IsEnabled>
</ProgramBlock>